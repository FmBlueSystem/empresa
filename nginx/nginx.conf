
user nginx;
worker_processes auto;
pid /var/run/nginx.pid;
error_log /var/log/nginx/error.log warn;

# Load dynamic modules.
# include /etc/nginx/modules/*.conf;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off; # Hide Nginx version
    client_max_body_size 20M; # Max size for file uploads

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Settings
    access_log /var/log/nginx/access.log;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # Upstream definitions
    upstream backend {
        server app:3000;
        keepalive 32;
    }

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=20r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

    # Main Server Block (HTTP)
    server {
        listen 80;
        server_name localhost;

        # Redirect all HTTP to HTTPS in production
        # return 301 https://$host$request_uri;

        # Security Headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        # NOTE: CSP is restrictive. 'unsafe-inline' is needed for Vite dev mode, but should be removed for production if possible.
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; object-src 'none'; frame-ancestors 'none';" always;
        add_header Permissions-Policy "geolocation=(), midi=(), sync-xhr=(), microphone=(), camera=(), magnetometer=(), gyroscope=(), fullscreen=(), payment=()" always;

        # Static files for frontend
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }

        # API Backend
        location /api/ {
            limit_req zone=api burst=40 nodelay;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_buffering on;
        }

        # Health check endpoint
        location /health {
            proxy_pass http://backend/health;
            access_log off;
        }
        
        # Nginx health check for Docker
        location /nginx-health {
            access_log off;
            return 200 "healthy";
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # HTTPS Server Block (Template)
    # Uncomment and configure for production SSL
    #
    # server {
    #     listen 443 ssl http2;
    #     server_name your_domain.com;
    #
    #     ssl_certificate /etc/nginx/ssl/your_domain.com.crt;
    #     ssl_certificate_key /etc/nginx/ssl/your_domain.com.key;
    #
    #     # SSL hardening
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_prefer_server_ciphers on;
    #     ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    #     ssl_ecdh_curve secp384r1;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_tickets off;
    #     ssl_stapling on;
    #     ssl_stapling_verify on;
    #
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    #
    #     # Include the same locations and security headers as the HTTP block
    #     include /etc/nginx/conf.d/locations.conf;
    # }

    # Include other configs if any
    include /etc/nginx/conf.d/*.conf;
}
 