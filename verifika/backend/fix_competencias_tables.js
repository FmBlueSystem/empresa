// Script para sincronizar tablas de competencias
const mysql = require('mysql2/promise');

async function fixCompetenciasTables() {
  const connection = await mysql.createConnection({
    host: 'localhost',
    user: 'bluesystem_user',
    password: 'secure_password_123',
    database: 'bluesystem'
  });

  console.log('üîß Sincronizando tablas de competencias...\n');

  try {
    // Crear tabla vf_competencias_catalogo si no existe
    await connection.execute(`
      CREATE TABLE IF NOT EXISTS vf_competencias_catalogo (
        id INT AUTO_INCREMENT PRIMARY KEY,
        nombre VARCHAR(150) NOT NULL,
        descripcion TEXT,
        categoria VARCHAR(100) DEFAULT 'tecnica',
        nivel_requerido ENUM('basico', 'intermedio', 'avanzado', 'experto') DEFAULT 'basico',
        certificacion_requerida BOOLEAN DEFAULT FALSE,
        activo BOOLEAN DEFAULT TRUE,
        fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        fecha_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
        UNIQUE KEY uk_competencia_catalogo_nombre (nombre),
        INDEX idx_catalogo_categoria (categoria),
        INDEX idx_catalogo_activo (activo)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
    `);
    console.log('‚úÖ Tabla vf_competencias_catalogo creada/verificada');

    // Copiar datos de vf_competencias a vf_competencias_catalogo si existen
    const [rows] = await connection.execute('SELECT COUNT(*) as count FROM vf_competencias');
    const [catalogRows] = await connection.execute('SELECT COUNT(*) as count FROM vf_competencias_catalogo');
    
    if (rows[0].count > 0 && catalogRows[0].count === 0) {
      await connection.execute(`
        INSERT INTO vf_competencias_catalogo (nombre, descripcion, categoria, nivel_requerido, activo)
        SELECT nombre, descripcion, categoria, nivel_requerido, 
               CASE WHEN estado = 'activa' THEN TRUE ELSE FALSE END as activo
        FROM vf_competencias
      `);
      console.log('‚úÖ Datos copiados de vf_competencias a vf_competencias_catalogo');
    }

    // Verificar datos
    const [finalCount] = await connection.execute('SELECT COUNT(*) as count FROM vf_competencias_catalogo');
    console.log(`üìä Total competencias en cat√°logo: ${finalCount[0].count}`);

    if (finalCount[0].count === 0) {
      // Insertar competencias de ejemplo en cat√°logo
      await connection.execute(`
        INSERT INTO vf_competencias_catalogo (nombre, descripcion, categoria, nivel_requerido) VALUES
        ('SAP ABAP', 'Programaci√≥n en SAP ABAP', 'sap', 'intermedio'),
        ('SAP Fiori', 'Desarrollo de interfaces SAP Fiori', 'sap', 'avanzado'),
        ('JavaScript', 'Programaci√≥n en JavaScript', 'desarrollo', 'basico'),
        ('React', 'Framework React para desarrollo frontend', 'desarrollo', 'intermedio'),
        ('Node.js', 'Desarrollo backend con Node.js', 'desarrollo', 'intermedio'),
        ('MySQL', 'Administraci√≥n de bases de datos MySQL', 'base_datos', 'basico'),
        ('Docker', 'Containerizaci√≥n con Docker', 'infraestructura', 'intermedio'),
        ('Office 365', 'Administraci√≥n de Office 365', 'office', 'basico'),
        ('SharePoint', 'Desarrollo y administraci√≥n SharePoint', 'office', 'avanzado'),
        ('Power BI', 'Creaci√≥n de reportes con Power BI', 'analytics', 'intermedio');
      `);
      console.log('‚úÖ Competencias de ejemplo insertadas en cat√°logo');
    }

    console.log('\nüéâ Sincronizaci√≥n completada!');
    
  } catch (error) {
    console.error('‚ùå Error:', error);
  } finally {
    await connection.end();
  }
}

fixCompetenciasTables().catch(console.error);