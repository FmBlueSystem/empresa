# Configuración de entorno para Verifika Backend
# Copiar este archivo como .env y completar con valores reales

# ================================
# CONFIGURACIÓN GENERAL
# ================================
NODE_ENV=development
PORT=3001
LOG_LEVEL=info

# Frontend URL (para CORS)
FRONTEND_URL=http://localhost:5174

# ================================
# BASE DE DATOS MYSQL
# ================================
DB_HOST=localhost
DB_PORT=3306
DB_NAME=bluesystem_verifika
DB_USER=root
DB_PASSWORD=tu_password_mysql

# Pool de conexiones
DB_CONNECTION_LIMIT=10
DB_QUEUE_LIMIT=0

# ================================
# REDIS CONFIGURATION
# ================================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=tu_password_redis
REDIS_DB=0

# TTL para sesiones (en segundos)
REDIS_SESSION_TTL=86400

# ================================
# JWT & SEGURIDAD
# ================================
JWT_SECRET=tu_jwt_secret_super_seguro_cambiar_en_produccion
JWT_EXPIRES_IN=24h
JWT_REFRESH_EXPIRES_IN=7d

# Secreto para sesiones
SESSION_SECRET=tu_session_secret_super_seguro

# API Key para integraciones
API_KEY=tu_api_key_unico

# ================================
# EMAIL CONFIGURATION
# ================================
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_SECURE=false
EMAIL_USER=tu_email@gmail.com
EMAIL_PASSWORD=tu_app_password

# Configuración de emails
EMAIL_FROM_NAME="Verifika System"
EMAIL_FROM_ADDRESS=noreply@verifika.com

# ================================
# ARCHIVOS Y UPLOADS
# ================================
UPLOAD_PATH=./uploads
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=jpg,jpeg,png,pdf,doc,docx

# ================================
# RATE LIMITING
# ================================
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ================================
# DART AI INTEGRATION
# ================================
DART_TOKEN=dsa_df88b54b32408afbe42489b08d25bfbf91759ab7d2d1cdac26f4d72b51c71583
DART_PROJECT_ID=slF0dOywYY8R
DART_API_URL=https://api.dart.ai

# ================================
# MONITORING Y LOGS
# ================================
# Directorio de logs
LOG_DIR=./logs

# Retención de logs (días)
LOG_RETENTION_DAYS=30

# ================================
# FEATURES FLAGS
# ================================
# Activar/desactivar funcionalidades
FEATURE_EMAIL_NOTIFICATIONS=true
FEATURE_FILE_UPLOAD=true
FEATURE_METRICS_COLLECTION=true
FEATURE_CACHE_ENABLED=true

# ================================
# CONFIGURACIÓN DE PRODUCCIÓN
# ================================
# Solo para ambiente de producción

# SSL Configuration
SSL_CERT_PATH=/path/to/cert.pem
SSL_KEY_PATH=/path/to/key.pem

# Backup Database
BACKUP_ENABLED=true
BACKUP_SCHEDULE="0 2 * * *"
BACKUP_RETENTION_DAYS=7

# External Services
EXTERNAL_API_BASE_URL=https://api.external-service.com
EXTERNAL_API_KEY=tu_external_api_key

# ================================
# DESARROLLO LOCAL
# ================================
# Variables específicas para desarrollo

# Debug mode
DEBUG=verifika:*

# Hot reload
NODEMON_IGNORE=uploads/,logs/

# Test database
TEST_DB_NAME=verifika_test

# ================================
# COMENTARIOS IMPORTANTES
# ================================

# 1. JWT_SECRET debe ser un string aleatorio muy seguro
#    Generar con: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"

# 2. Para Gmail, usar App Password en lugar de contraseña normal
#    Habilitar 2FA y generar App Password en Google Account settings

# 3. En producción, cambiar todas las contraseñas y secrets

# 4. CORS: Ajustar FRONTEND_URL según el dominio de producción

# 5. Rate limiting: Ajustar según necesidades de tráfico

# 6. Logs: En producción, considerar servicio externo como Winston CloudWatch