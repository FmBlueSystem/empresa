# ========================================
# BLUESYSTEM.IO - CONFIGURACIÓN DE ENTORNO
# ========================================
# 
# IMPORTANTE: Este archivo contiene variables de ejemplo para configurar BlueSystem.io
# 
# PASOS PARA CONFIGURAR:
# 1. Copia este archivo como .env en la raíz del proyecto
# 2. Modifica los valores según tu entorno (desarrollo/producción)
# 3. NUNCA subas el archivo .env al repositorio (está en .gitignore)
#
# ========================================

# ========================================
# CONFIGURACIÓN DEL ENTORNO
# ========================================

# Entorno de ejecución: development, staging, production
NODE_ENV=production

# Puerto donde correrá la aplicación backend
PORT=3000

# URL base del dominio (cambiar por tu dominio real)
DOMAIN=bluesystem.io

# URL completa del frontend (cambiar por tu dominio real)
FRONTEND_URL=https://bluesystem.io

# URL completa del backend API (cambiar por tu dominio real)
BACKEND_URL=https://api.bluesystem.io

# ========================================
# CONFIGURACIÓN DE BASE DE DATOS MYSQL
# ========================================

# Host de la base de datos (usar 'db' para Docker, IP del servidor para VPS)
DB_HOST=db

# Puerto de MySQL (por defecto 3306)
DB_PORT=3306

# Nombre de la base de datos principal
DB_NAME=bluesystem

# Usuario de la base de datos (NO usar root en producción)
DB_USER=bluesystem_user

# Contraseña del usuario de base de datos (CAMBIAR por una segura)
DB_PASSWORD=CAMBIAR_CONTRASEÑA_SEGURA_AQUI

# Contraseña del usuario root de MySQL (CAMBIAR por una segura)
DB_ROOT_PASSWORD=CAMBIAR_ROOT_PASSWORD_AQUI

# ========================================
# CONFIGURACIÓN DE REDIS (CACHE)
# ========================================

# Host de Redis (usar 'cache' para Docker, IP del servidor para VPS)
REDIS_HOST=cache

# Puerto de Redis (por defecto 6379)
REDIS_PORT=6379

# Contraseña de Redis (CAMBIAR por una segura)
REDIS_PASSWORD=CAMBIAR_REDIS_PASSWORD_AQUI

# ========================================
# CONFIGURACIÓN DE SEGURIDAD JWT
# ========================================

# Secreto para tokens JWT (GENERAR uno aleatorio y seguro)
# Usar: openssl rand -base64 64
JWT_SECRET=GENERAR_JWT_SECRET_ALEATORIO_64_CARACTERES_AQUI

# Secreto para refresh tokens (GENERAR uno diferente al JWT_SECRET)
# Usar: openssl rand -base64 64
JWT_REFRESH_SECRET=GENERAR_REFRESH_SECRET_ALEATORIO_64_CARACTERES_AQUI

# Tiempo de expiración del JWT en segundos (3600 = 1 hora)
JWT_EXPIRES_IN=3600

# Tiempo de expiración del refresh token en segundos (604800 = 7 días)
JWT_REFRESH_EXPIRES_IN=604800

# ========================================
# CONFIGURACIÓN DE API Y SESIONES
# ========================================

# Clave API para integraciones externas (GENERAR una aleatoria)
API_KEY=GENERAR_API_KEY_ALEATORIA_AQUI

# Secreto para sesiones de Express (GENERAR uno aleatorio)
# Usar: openssl rand -base64 32
SESSION_SECRET=GENERAR_SESSION_SECRET_ALEATORIO_32_CARACTERES_AQUI

# ========================================
# CONFIGURACIÓN DE LOGS
# ========================================

# Nivel de logs: error, warn, info, debug
LOG_LEVEL=info

# Tamaño máximo de archivos de log
LOG_MAX_SIZE=10m

# Número máximo de archivos de log a mantener
LOG_MAX_FILES=5

# ========================================
# CONFIGURACIÓN SSL/TLS (PRODUCCIÓN)
# ========================================

# Habilitar HTTPS (true para producción)
ENABLE_HTTPS=true

# Ruta al certificado SSL (si usas certificados propios)
SSL_CERT_PATH=/etc/ssl/certs/bluesystem.crt

# Ruta a la clave privada SSL (si usas certificados propios)
SSL_KEY_PATH=/etc/ssl/private/bluesystem.key

# Email para Let's Encrypt (si usas certificados automáticos)
LETSENCRYPT_EMAIL=admin@bluesystem.io

# ========================================
# CONFIGURACIÓN DE CORREO ELECTRÓNICO
# ========================================

# Configuración SMTP para envío de emails
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=noreply@bluesystem.io
SMTP_PASS=CAMBIAR_PASSWORD_EMAIL_AQUI

# Email del remitente por defecto
FROM_EMAIL=noreply@bluesystem.io
FROM_NAME=BlueSystem.io

# ========================================
# CONFIGURACIÓN DE ALMACENAMIENTO
# ========================================

# Directorio para uploads (relativo al contenedor)
UPLOAD_DIR=/app/uploads

# Tamaño máximo de archivos en MB
MAX_FILE_SIZE=10

# Tipos de archivos permitidos (separados por coma)
ALLOWED_FILE_TYPES=jpg,jpeg,png,gif,pdf,doc,docx

# ========================================
# CONFIGURACIÓN DE RATE LIMITING
# ========================================

# Máximo de requests por IP por ventana de tiempo
RATE_LIMIT_MAX=100

# Ventana de tiempo en minutos
RATE_LIMIT_WINDOW=15

# ========================================
# CONFIGURACIÓN DE MONITOREO
# ========================================

# Habilitar métricas de aplicación
ENABLE_METRICS=true

# Puerto para métricas (Prometheus)
METRICS_PORT=9090

# Habilitar health checks
ENABLE_HEALTH_CHECKS=true

# ========================================
# CONFIGURACIÓN DE BACKUP
# ========================================

# Directorio para backups
BACKUP_DIR=/app/backups

# Retención de backups en días
BACKUP_RETENTION_DAYS=7

# Hora para backup automático (formato cron)
BACKUP_SCHEDULE=0 2 * * *

# ========================================
# CONFIGURACIÓN ESPECÍFICA DE PRODUCCIÓN
# ========================================

# Número de workers para PM2 (usar 'max' para usar todos los cores)
PM2_INSTANCES=max

# Memoria máxima por proceso PM2 en MB
PM2_MAX_MEMORY=512

# Habilitar restart automático en caso de error
PM2_AUTO_RESTART=true

# ========================================
# COMANDOS ÚTILES PARA GENERAR SECRETOS
# ========================================
#
# Para generar secretos seguros, usar estos comandos en terminal:
#
# JWT_SECRET y JWT_REFRESH_SECRET:
# openssl rand -base64 64
#
# SESSION_SECRET:
# openssl rand -base64 32
#
# API_KEY:
# openssl rand -hex 32
#
# Contraseñas seguras:
# openssl rand -base64 32
#
# ========================================
